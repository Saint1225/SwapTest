{"version":3,"sources":["Index/AppMain.js","App.js","reportWebVitals.js","index.js","Index/AppMain.module.css"],"names":["AppMain","useState","userId","setUserId","name","setName","Date","time","setTime","history","useHistory","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","ampm","className","classes","Container","SwapBotton","onClick","queryUserId","URLSearchParams","window","location","search","get","queryName","queryTime","params","append","push","toString","DeleteBotton","UpdatedInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAyEeA,EApEC,WACZ,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAIK,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAqBhB,IAGIC,EAAMJ,EAAKK,UACXC,EAJY,CAAC,MAAM,MAAM,MAAM,MACjB,MAAM,MAAM,MAAM,MAClB,MAAO,MAAM,MAAM,OAEdN,EAAKO,YACxBC,EAAOR,EAAKS,cACZC,EAAOV,EAAKW,WACZC,EAASZ,EAAKa,aACdC,EAASd,EAAKe,aACdC,EAAON,EAAO,GAAK,KAAM,KAoB7B,OACI,sBAAKO,UAAWC,IAAQC,UAAxB,UACI,sBAAKF,UAAWC,IAAQE,WAAxB,UACI,yCAAYvB,KACZ,wBAAQwB,QApDpB,WACE,IAAMC,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,UAC9DC,EAAY,IAAIL,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,QAC5DE,EAAa,IAAIN,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,QAEnE,GAAgB,MAAZC,GAAkC,MAAdN,GAAwBO,EAQ9CjC,EAAU0B,GACVxB,EAAQ8B,GACR3B,EAAQ,IAAIF,KAAK8B,QAVwC,CACzD,IAAMC,EAAS,IAAIP,gBACnBO,EAAOC,OAAO,SAAU,MACxBD,EAAOC,OAAO,OAAQ,MACtBD,EAAOC,OAAO,OAAQ,IAAIhC,KAAK,IAC/BG,EAAQ8B,KAAK,CAACN,OAAQI,EAAOG,eA0CrB,wBACA,gDACA,oDACA,wBAAQhB,UAAWC,IAAQgB,aAA3B,4BAEJ,sBAAKjB,UAAWC,IAAQiB,YAAxB,uCAAgExC,EAAhE,OAA4ES,EAA5E,IAAkFE,EAAlF,IAA0FE,EAA1F,KAAkGE,EAAlG,IAAyGE,EAAzG,IAAkHE,EAAlH,IAA2HE,EAA3H,W,MCvDGoB,MAVf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,K,kBClBAc,EAAOC,QAAU,CAAC,UAAY,2BAA2B,WAAa,4BAA4B,aAAe,8BAA8B,YAAc,gC","file":"static/js/main.e389792f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Route, useHistory } from 'react-router-dom';\r\n// import GetQuery from './GetQuery'\r\nimport classes from './AppMain.module.css';\r\n\r\nconst AppMain = () => {\r\n    const [userId, setUserId] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [time, setTime] = useState(new Date())\r\n    const history = useHistory()\r\n\r\n    function onChange() {\r\n      const queryUserId = new URLSearchParams(window.location.search).get('userId')\r\n      const queryName = new URLSearchParams(window.location.search).get('name')\r\n      const queryTime = (new URLSearchParams(window.location.search).get('time'))\r\n\r\n      if (queryName ==null && queryUserId ==null &&  !queryTime) {\r\n        const params = new URLSearchParams()\r\n        params.append(\"userId\", null)\r\n        params.append(\"name\", null)\r\n        params.append(\"time\", new Date(0))\r\n        history.push({search: params.toString()})\r\n      }\r\n      else {\r\n        setUserId(queryUserId)\r\n        setName(queryName)\r\n        setTime(new Date(queryTime))\r\n      }\r\n    }\r\n\r\n    let monthNames =[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\r\n                      \"May\",\"Jun\",\"Jul\",\"Aug\",\r\n                      \"Sep\", \"Oct\",\"Nov\",\"Dec\"];\r\n    let day = time.getDate()\r\n    let month = monthNames[time.getMonth()]\r\n    let year = time.getFullYear()\r\n    let hour = time.getHours()\r\n    let minute = time.getMinutes()\r\n    let second = time.getSeconds()\r\n    let ampm = hour < 12 ? 'am': 'pm'\r\n      \r\n    // useEffect(() => {\r\n    //   const params = new URLSearchParams()\r\n    //   if (userId) {\r\n    //     params.append(\"name\", \"Name from query\")\r\n    //     params.append(\"userId\", userId)\r\n    //     params.append(\"time\", new Date())\r\n    //   } else {\r\n    //     params.delete(\"name\")\r\n    //     params.delete(\"userId\")\r\n    //     params.delete(\"time\")\r\n    //   }\r\n    //   history.push({search: params.toString()})\r\n    // }, [userId, history])\r\n\r\n    // const saveNameHandler = (saveName) => {\r\n    //   setName(saveName)\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.Container}>\r\n            <div className={classes.SwapBotton}>\r\n                <h3>Swap - {name}</h3>\r\n                <button onClick={onChange}>Amend Swap</button>\r\n                <button>Clone Swap</button>\r\n                <button>Generate Email</button>\r\n                <button className={classes.DeleteBotton}>Delete Swap</button>\r\n            </div>\r\n            <div className={classes.UpdatedInfo}>Last modified by User id: {userId} at {day} {month} {year}, {hour}:{minute}:{second} {ampm} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppMain","import AppMain from './Index/AppMain'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppMain />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AppMain_Container__59Or5\",\"SwapBotton\":\"AppMain_SwapBotton__WyUlL\",\"DeleteBotton\":\"AppMain_DeleteBotton__Io-8E\",\"UpdatedInfo\":\"AppMain_UpdatedInfo__3TJhi\"};"],"sourceRoot":""}